NIL
/* Starts dribbling to /Users/takatoosetsuo/specialclass.git/numazu250214/fig/1circumferenceangle1mxans1.txt (2025/2/14, 11:49:47).*/
(%i3) powerdisp:false
(%i4) display2d:false
(%i5) linel:1000
(%i6) batch("/Applications/KeTTeX.app/texlive/texmf-dist/scripts/ketcindy/ketlib/maximaL/mnr.max")

read and interpret /Applications/KeTTeX.app/texlive/texmf-dist/scripts/ketcindy/ketlib/maximaL/mnr.max
(%i7) numer(f):=factor(num(ratsimp(f)))
(%i8) Numer(f):=numer(f)
(%i9) denomf(f):=factor(denom(ratsimp(f)))
(%i10) Denom(f):=factor(denom(ratsimp(f)))
(%i11) fracfactor(f):=numer(f)/denomf(f)
(%i12) frfactor(f):=numer(f)/denomf(f)
(%i13) factorfr(f):=numer(f)/denomf(f)
(%i14) ratev(eq,rep):=ratsimp(ev(eq,rep))
(%i15) Ratev(eq,rep):=ratev(eq,rep)
(%i16) frev(eq,rep):=frfactor(ratev(eq,rep))
(%i17) ratevL(eq,repL):=block([out,tmp],out:eq,for tmp thru length(repL) do out:ratev(out,repL[tmp]),out)
(%i18) frevL(eq,repL):=ratevL(eq,repL)
(%i19) frsbsL(vL,sol):=block([k,tmp,tmp1,tmp2,out],out:[],for k thru length(vL) do block(tmp1:frevL(vL[k],sol),out:endcons(tmp1,out)),return(out))
(%i20) disc(eq,v):=block([eqe,v2,v1,v0],eqe:expand(eq),v2:coeff(eqe,v,2),v1:coeff(eqe,v,1),v0:coeff(eqe,v,0),frfactor(v1^2-4*v2*v0))
(%i21) nthfactor(pol,kth):=block([tmp,j,out],tmp:part(pol,0),if tmp = "-" then tmp:part(pol,1) else tmp:pol,j:length(tmp),if kth > j then kth:j,part(tmp,kth))
(%i22) angtan(m):=float((2*atan(m)*180)/%pi)
(%i23) tanang(t):=float(tan(((t/2)*%pi)/180))
(%i24) supA(m):=ratsimp(1/m)
(%i25) comA(m):=ratsimp((1-m)/(m+1))
(%i26) Hokaku(m):=ratsimp(1/m)
(%i27) Yokaku(m):=ratsimp((1-m)/(m+1))
(%i28) plusA(m1,m2):=ratsimp((m1+m2)/(1-m2*m1))
(%i29) minusA(m1,m2):=ratsimp((m1-m2)/(1+m2*m1))
(%i30) edge(A,B):=block([out],out:frfactor(lenSeg2(A,B)),out:frfactor(sqrt(out)))
(%i31) edg2m(c,a,b):=block([cs,out],cs:(a^2+b^2-c^2)/(2*a*b),out:sqrt(frfactor((1-cs)/(1+cs))),out:frfactor(out))
(%i32) cos2m(c):=block([out],out:sqrt(frfactor((1-c)/(1+c))),out:frfactor(out))
(%i33) dotProd(v1,v2):=ratsimp(v1[1]*v2[1]+v1[2]*v2[2])
(%i34) normsq(v):=ratsimp(v[1]^2+v[2]^2)
(%i35) crossProd(v1,v2):=ratsimp(v1[1]*v2[2]-v1[2]*v2[1])
(%i36) eqLine(pa1,pa2):=block([tmp,tmp1,tmp2,out],if pa1[1] = pa2[1] then tmp:_X-pa1[1] else block(tmp1:pa2[1]-pa1[1],tmp2:pa2[2]-pa1[2],tmp:_Y-(pa1[2]+(tmp2/tmp1)*(_X-pa1[1]))),out:numer(tmp))
(%i37) meetLinell(line1,line2):=block([out],out:solve([line1,line2],[_X,_Y]),if length(out) > 0 then out:ratev([_X,_Y],out))
(%i38) meetLine(pts1,pts2):=block([tmp1,tmp2,out],tmp1:eqLine(pts1[1],pts1[2]),tmp2:eqLine(pts2[1],pts2[2]),out:meetLinell(tmp1,tmp2),out)
(%i39) lenSeg2(p1,[p2]):=block([tmp],if length(p2) > 0 then tmp:(p2[1][1]-p1[1])^2+(p2[1][2]-p1[2])^2 else tmp:p1[1]^2+p1[2]^2,ratsimp(tmp))
(%i40) lenSeg(p1,[p2]):=block([tmp],if length(p2) > 0 then tmp:(p2[1][1]-p1[1])^2+(p2[1][2]-p1[2])^2 else tmp:p1[1]^2+p1[2]^2,ratsimp(sqrt(tmp)))
(%i41) vect(A,B):=ratsimp(B-A)
(%i42) ptDirSeg(A,B,t):=ratsimp([A[1]+t*(B[1]-A[1]),A[2]+t*(B[2]-A[2])])
(%i43) slide(v):=ratsimp(v+sliderVector)
(%i44) rotate(v):=block([x,y,c,s,u],x:v[1]-rotCenter[1],y:v[2]-rotCenter[2],c:rotCS[1],s:rotCS[2],u:[c*x-s*y,s*x+c*y],ratsimp(u+rotCenter))
(%i45) putTriangle(m,n,r):=block(mAng:m,nAng:n,inR:r,assume(mAng > 0,nAng > 0,inR > 0,mAng*nAng-1 < 0),edgeLeft:(r*(1+m^2))/(m*(1-n*m)),edgL:edgeLeft,edgeRight:(r*(1+n^2))/(n*(1-n*m)),edgR:edgeRight,edgeBottom:(r*(m+n))/(n*m),edgB:edgeBottom,cirR:(r*(m^2+1)*(n^2+1))/(4*m*n*(1-m*n)),exRa:r/(m*n),exRb:(r*(m+n))/(m*(1-m*n)),exRc:(r*(m+n))/(n*(1-m*n)),area:(r^2*(m+n))/(m*n*(1-m*n)),halfPer:(r*(m+n))/(m*n*(1-m*n)),half:halfPer,inCenter:[0,0],inC:inCenter,vertexLeft:[-r/m,-r],verL:vertexLeft,vtxL:verL,vertexRight:[r/n,-r],verR:vertexRight,vtxR:verR,vertexTop:[(r*(n-m))/(1-m*n),(r*(1+m*n))/(1-m*n)],verT:vertexTop,vtxT:verT,cirCenter:[(r*(m-n))/(2*m*n),(r*(m^2+3*m^2*n^2+n^2-1))/(4*m*n*(1-m*n))],cirC:cirCenter,barCenter:[(r*(2*m*n-1)*(n-m))/(3*m*n*(1-m*n)),(r*(3*m*n-1))/(3*(1-m*n))],barC:barCenter,ortCenter:[(r*(n-m))/(1-m*n),(r*(3*m^2*n^2-m^2+(-2)*m*n-n^2+1))/(2*m*n*(1-m*n))],ortC:ortCenter,exCentera:[(r*(m-n))/(m*n),(-r*(m*n+1))/(m*n)],exCa:exCentera,
                   exCenterb:[(-r*(1+m^2))/(m*(1-m*n)),(r*n*(1+m^2))/(m*(1-m*n))],exCb:exCenterb,exCenterc:[(r*(1+n^2))/(n*(1-m*n)),(r*m*(1+n^2))/(n*(1-m*n))],exCc:exCenterc,sliderVector:[0,0],rotCenter:[0,0],rotCsSn:[1,0],[vertexTop,vertexLeft,vertexRight,inCenter])
(%i46) putT(m,n,r):=putTriangle(m,n,r)
(%i47) putTriangle_btm(m,n,btm):=block([r,ans],putTriangle(m,n,r),ans:ratsimp(solve(edgeBottom = btm,r)),putTriangle(m,n,ans),[vertexTop,vertexLeft,vertexRight,inCenter])
(%i48) slideTriangle(A,B):=block(sliderVector:[B[1]-A[1],B[2]-A[2]],inCenter:slide(inCenter),inC:inCenter,vertexLeft:slide(vertexLeft),verL:vertexLeft,vtxL:verL,vertexRight:slide(vertexRight),verR:vertexRight,vtxR:verR,vertexTop:slide(vertexTop),verT:vertexTop,vtxT:verT,cirCenter:slide(cirCenter),cirC:cirCenter,barCenter:slide(barCenter),barC:barCenter,ortCenter:slide(ortCenter),ortC:ortCenter,exCentera:slide(exCentera),exCa:exCentera,exCenterb:slide(exCenterb),exCb:exCenterb,exCenterc:slide(exCenterc),exCc:exCenterc,[vertexTop,vertexLeft,vertexRight,inCenter])
(%i49) slideT(A,B):=slideTriangle(A,B)
(%i50) rotateTriangle(tr,centre):=block(rotCenter:centre,rotCS:[(1-tr^2)/(1+tr^2),(2*tr)/(1+tr^2)],inCenter:rotate(inCenter),inC:inCenter,vertexLeft:rotate(vertexLeft),verL:vertexLeft,vtxL:verL,vertexRight:rotate(vertexRight),verR:vertexRight,vtxR:verR,vertexTop:rotate(vertexTop),verT:vertexTop,vtxT:verT,cirCenter:rotate(barCenter),cirC:cirCenter,ortCenter:rotate(ortCenter),ortC:ortCenter,barCenter:rotate(barCenter),barC:barCenter,exCentera:rotate(exCentera),exCa:exCentera,exCenterb:rotate(exCenterb),exCb:exCenterb,exCenterc:rotate(exCenterc),exCc:exCenterc,[vertexTop,vertexLeft,vertexRight,inCenter])
(%i51) rotateT(tr,centre):=rotateTriangle(tr,centre)
(%i52) angT(m,n):=supA(plusA(m,n))
(%o52) angT(m,n):=supA(plusA(m,n))
(%i53) reduceDegree(pL,z,stp):=block([stpL,dg1,dg2,co1,co2,tmp,tmp1,tmp2,ctr,out],tmp1:expand(pL[1]),tmp2:expand(pL[2]),dg1:hipow(tmp1,z),dg2:hipow(tmp2,z),ctr:1,stpL:[],while (not dg2 = 0 and not dg1 = 0) and ctr <= stp do block(co1:diff(tmp1,z,dg1)/dg1!,co2:diff(tmp2,z,dg2)/dg2!,tmp:gcd(co1,co2),co1:ratsimp(co1/tmp),co2:ratsimp(co2/tmp),if dg2 < dg1 then block(tmp1:expand(co2*tmp1-co1*tmp2*z^(dg1-dg2)),dg1:hipow(tmp1,z)) else block(tmp2:expand(co2*tmp1*z^(dg2-dg1)-co1*tmp2),dg2:hipow(tmp2,z)),stpL:append(stpL,[tmp1,tmp2]),ctr:ctr+1),tmp1:factor(tmp1),tmp2:factor(tmp2),[tmp1,tmp2,ctr,dg1,dg2,stpL])
(%i54) reduceD(pL,z,stp):=reduceDegree(pL,z,stp)
(%i55) commonTan(C1,r1,C2,r2,ch):=block([mL,x1,y1,x2,y2,pA1,pB1,pC1,pA2,pB2,pC2,v1,v2,eq,sol,sol1,sol2,tmp,tmp1,out],x1:C1[1],y1:C1[2],x2:C2[1],y2:C2[2],putTriangle(mL,1,r1),slideTriangle([0,0],C1),pA1:vertexTop,pB1:vertexLeft,pC1:vertexRight,putTriangle(mL,1,r2),slideTriangle([0,0],C2),pA2:vertexTop,pB2:vertexLeft,pC2:vertexRight,v1:ratsimp(pA1-pB1),v2:ratsimp(pA2-pB1),tmp:crossProd(v1,v2),eq:numer(tmp),sol:solve(eq,mL),tmp:sol[ch],pA1:frfactor(subst(tmp,pA1)),pB1:frfactor(subst(tmp,pB1)),out:[pA1,pB1],out)
(%i56) comTan1(C1,r1,C2,r2):=commonTan(C1,r1,C2,r2,1)
(%i57) comTan2(C1,r1,C2,r2):=commonTan(C1,r1,C2,r2,2)
(%i58) commonTanR(C1,r1,C2,r2,ch):=block([x1,y1,x2,y2,pA1,pC1,pA2,pC2,v1,v2,eq,sol,sol1,sol2,tmp,tmp1,out],x1:C1[1],y1:C1[2],x2:C2[1],y2:C2[2],putTriangle(1,nR,r1),slideTriangle([0,0],C1),pA1:vertexTop,pC1:vertexRight,putTriangle(1,nR,r2),slideTriangle([0,0],C2),pA2:vertexTop,pC2:vertexRight,v1:ratsimp(pA1-pC1),v2:ratsimp(pA2-pC1),eq:crossProd(v1,v2),eq:numer(eq),sol:solve(eq,nR),tmp:sol[ch],pA1:frfactor(subst(tmp,pA1)),pC1:frfactor(subst(tmp,pC1)),out:[pA1,pC1],out)
(%i59) comTanR(C1,r1,C2,r2):=commonTanR(C1,r1,C2,r2,1)
(%i60) commonTanC(C1,r1,C2,r2,ch):=block([x1,y1,x2,y2,pA1,pB1,pA2,pC2,v1,v2,eq1,eq2,sol,sol1,sol2,tmp,tmp1,out],x1:C1[1],y1:C1[2],x2:C2[1],y2:C2[2],putTriangle(mL,1,r1),slideTriangle([0,0],C1),pA1:vertexTop,pB1:vertexLeft,putTriangle(1,1/mL,r2),slideTriangle([0,0],C2),pA2:vertexTop,pC2:vertexRight,v1:ratsimp(pA1-pB1),v2:ratsimp(pA2-pB1),tmp:crossProd(v1,v2),eq:numer(tmp),sol:solve(eq,mL),tmp:sol[ch],pA1:frfactor(subst(tmp,pA1)),pB1:frfactor(subst(tmp,pB1)),out:[pA1,pB1],out)
(%i61) comTanC1(C1,r1,C2,r2):=commonTanC(C1,r1,C2,r2,1)
(%i62) comTanC2(C1,r1,C2,r2):=commonTanC(C1,r1,C2,r2,2)
(%i63) ratden(s,x,a):=block([sL,lflg,len,j,tmpn,tmpd,tmpr,ns,ds,mul,out],if not listp(s) then block(ns:num(s),ds:denom(s),ns:remainder(ns,x^2-a),ds:remainder(ds,x^2-a),ds:expand(ds),c1:coeff(ds,x,1),c0:coeff(ds,x,0),mul:c1*x-c0,tmpn:remainder(ns*mul,x^2-a),tmpd:remainder(ds*mul,x^2-a),out:frfactor(tmpn/tmpd)),if listp(s) then block(len:length(s),out:[],for j thru len do block(tmpr:ratden(s[j],x,a),out:endcons(tmpr,out))),return(out))
(%i65) putT(m,n,r)
(%o65) [[((n-m)*r)/(1-m*n),((m*n+1)*r)/(1-m*n)],[-(r/m),-r],[r/n,-r],[0,0]]
(%i66) slideT(cirC,[0,0])
(%i67) aA:angT(m,n)
(%i68) eq1:edgB-a
(%o68) ((n+m)*r)/(m*n)-a
(%i69) eq2:cirR-R
(%i70) sol:solve([eq1,eq2],[n,r])
(%o70) [[n = -((sqrt(4*R^2-a^2)*(m^2+1)+2*R*m^2-2*R)/(a*m^2+4*R*m+a)),r = -((sqrt(4*R^2-a^2)*m^2+2*R*m^2-a*m)/(m^2+1))],[n = (sqrt(4*R^2-a^2)*(m^2+1)-2*R*m^2+2*R)/(a*m^2+4*R*m+a),r = (sqrt(4*R^2-a^2)*m^2-2*R*m^2+a*m)/(m^2+1)],[n = 0,r = 0]]
(%i71) print(sol)
[[n = -((sqrt(4*R^2-a^2)*(m^2+1)+2*R*m^2-2*R)/(a*m^2+4*R*m+a)),r = -((sqrt(4*R^2-a^2)*m^2+2*R*m^2-a*m)/(m^2+1))],[n = (sqrt(4*R^2-a^2)*(m^2+1)-2*R*m^2+2*R)/(a*m^2+4*R*m+a),r = (sqrt(4*R^2-a^2)*m^2-2*R*m^2+a*m)/(m^2+1)],[n = 0,r = 0]] 
(%i72) v:frev([vtxT,vtxL,vtxR,n,aA],sol[2])
(%i73) A:v[1]
(%o73) [(4*R*a*sqrt(4*R^2-a^2)*m^7+a^3*m^7-8*R^2*a*m^7-3*a^2*sqrt(4*R^2-a^2)*m^6+32*R^2*sqrt(4*R^2-a^2)*m^6+14*R*a^2*m^6-64*R^3*m^6-16*R*a*sqrt(4*R^2-a^2)*m^5-a^3*m^5+32*R^2*a*m^5-5*a^2*sqrt(4*R^2-a^2)*m^4-32*R^2*sqrt(4*R^2-a^2)*m^4-2*R*a^2*m^4+64*R^3*m^4-12*R*a*sqrt(4*R^2-a^2)*m^3-5*a^3*m^3-8*R^2*a*m^3-a^2*sqrt(4*R^2-a^2)*m^2-14*R*a^2*m^2+8*R*a*sqrt(4*R^2-a^2)*m-3*a^3*m+16*R^2*a*m+a^2*sqrt(4*R^2-a^2)+2*R*a^2)/(2*(m^2+1)^2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)),
        -((a^2*sqrt(4*R^2-a^2)*m^7-8*R^2*sqrt(4*R^2-a^2)*m^7-4*R*a^2*m^7+16*R^3*m^7+14*R*a*sqrt(4*R^2-a^2)*m^6+3*a^3*m^6-28*R^2*a*m^6-a^2*sqrt(4*R^2-a^2)*m^5+48*R^2*sqrt(4*R^2-a^2)*m^5+16*R*a^2*m^5-96*R^3*m^5-2*R*a*sqrt(4*R^2-a^2)*m^4+5*a^3*m^4+12*R^2*a*m^4-5*a^2*sqrt(4*R^2-a^2)*m^3-8*R^2*sqrt(4*R^2-a^2)*m^3+12*R*a^2*m^3+16*R^3*m^3-14*R*a*sqrt(4*R^2-a^2)*m^2+a^3*m^2-20*R^2*a*m^2-3*a^2*sqrt(4*R^2-a^2)*m-8*R*a^2*m+2*R*a*sqrt(4*R^2-a^2)-a^3+4*R^2*a)/(2*(m^2+1)^2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)))]
(%i74) B:v[2]
(%o74) [-(a/2),-((a^2*sqrt(4*R^2-a^2)*m^3-8*R^2*sqrt(4*R^2-a^2)*m^3-4*R*a^2*m^3+16*R^3*m^3-2*R*a*sqrt(4*R^2-a^2)*m^2-a^3*m^2+4*R^2*a*m^2+a^2*sqrt(4*R^2-a^2)*m+2*R*a*sqrt(4*R^2-a^2)-a^3+4*R^2*a)/(2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)))]
(%i75) C:v[3]
(%o75) [a/2,-((a^2*sqrt(4*R^2-a^2)*m^3-8*R^2*sqrt(4*R^2-a^2)*m^3-4*R*a^2*m^3+16*R^3*m^3-2*R*a*sqrt(4*R^2-a^2)*m^2-a^3*m^2+4*R^2*a*m^2+a^2*sqrt(4*R^2-a^2)*m+2*R*a*sqrt(4*R^2-a^2)-a^3+4*R^2*a)/(2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)))]
(%i76) n:v[4]
(%o76) (sqrt(4*R^2-a^2)*m^2-2*R*m^2+sqrt(4*R^2-a^2)+2*R)/(a*m^2+4*R*m+a)
(%i77) aA:v[5]
(%i78) end
(%i79) disp(sol)
[[n = -((sqrt(4*R^2-a^2)*(m^2+1)+2*R*m^2-2*R)/(a*m^2+4*R*m+a)),r = -((sqrt(4*R^2-a^2)*m^2+2*R*m^2-a*m)/(m^2+1))],[n = (sqrt(4*R^2-a^2)*(m^2+1)-2*R*m^2+2*R)/(a*m^2+4*R*m+a),r = (sqrt(4*R^2-a^2)*m^2-2*R*m^2+a*m)/(m^2+1)],[n = 0,r = 0]]

(%i80) disp(A)
[(4*R*a*sqrt(4*R^2-a^2)*m^7+a^3*m^7-8*R^2*a*m^7-3*a^2*sqrt(4*R^2-a^2)*m^6+32*R^2*sqrt(4*R^2-a^2)*m^6+14*R*a^2*m^6-64*R^3*m^6-16*R*a*sqrt(4*R^2-a^2)*m^5-a^3*m^5+32*R^2*a*m^5-5*a^2*sqrt(4*R^2-a^2)*m^4-32*R^2*sqrt(4*R^2-a^2)*m^4-2*R*a^2*m^4+64*R^3*m^4-12*R*a*sqrt(4*R^2-a^2)*m^3-5*a^3*m^3-8*R^2*a*m^3-a^2*sqrt(4*R^2-a^2)*m^2-14*R*a^2*m^2+8*R*a*sqrt(4*R^2-a^2)*m-3*a^3*m+16*R^2*a*m+a^2*sqrt(4*R^2-a^2)+2*R*a^2)/(2*(m^2+1)^2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)),
 -((a^2*sqrt(4*R^2-a^2)*m^7-8*R^2*sqrt(4*R^2-a^2)*m^7-4*R*a^2*m^7+16*R^3*m^7+14*R*a*sqrt(4*R^2-a^2)*m^6+3*a^3*m^6-28*R^2*a*m^6-a^2*sqrt(4*R^2-a^2)*m^5+48*R^2*sqrt(4*R^2-a^2)*m^5+16*R*a^2*m^5-96*R^3*m^5-2*R*a*sqrt(4*R^2-a^2)*m^4+5*a^3*m^4+12*R^2*a*m^4-5*a^2*sqrt(4*R^2-a^2)*m^3-8*R^2*sqrt(4*R^2-a^2)*m^3+12*R*a^2*m^3+16*R^3*m^3-14*R*a*sqrt(4*R^2-a^2)*m^2+a^3*m^2-20*R^2*a*m^2-3*a^2*sqrt(4*R^2-a^2)*m-8*R*a^2*m+2*R*a*sqrt(4*R^2-a^2)-a^3+4*R^2*a)/(2*(m^2+1)^2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)))]

(%i81) disp(B)
[-(a/2),-((a^2*sqrt(4*R^2-a^2)*m^3-8*R^2*sqrt(4*R^2-a^2)*m^3-4*R*a^2*m^3+16*R^3*m^3-2*R*a*sqrt(4*R^2-a^2)*m^2-a^3*m^2+4*R^2*a*m^2+a^2*sqrt(4*R^2-a^2)*m+2*R*a*sqrt(4*R^2-a^2)-a^3+4*R^2*a)/(2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)))]

(%i82) disp(C)
[a/2,-((a^2*sqrt(4*R^2-a^2)*m^3-8*R^2*sqrt(4*R^2-a^2)*m^3-4*R*a^2*m^3+16*R^3*m^3-2*R*a*sqrt(4*R^2-a^2)*m^2-a^3*m^2+4*R^2*a*m^2+a^2*sqrt(4*R^2-a^2)*m+2*R*a*sqrt(4*R^2-a^2)-a^3+4*R^2*a)/(2*(4*R*sqrt(4*R^2-a^2)*m^3+a^2*m^3-8*R^2*m^3+a*sqrt(4*R^2-a^2)*m^2-2*R*a*m^2+a^2*m+a*sqrt(4*R^2-a^2)+2*R*a)))]

(%i83) disp(n)
(sqrt(4*R^2-a^2)*m^2-2*R*m^2+sqrt(4*R^2-a^2)+2*R)/(a*m^2+4*R*m+a)

(%i84) disp(aA)
-((sqrt(4*R^2-a^2)*m-2*R*m-a)/(a*m+sqrt(4*R^2-a^2)+2*R))

(%i85) closefile()
